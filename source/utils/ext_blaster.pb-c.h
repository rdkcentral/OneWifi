/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ext_blaster.proto */

#ifndef PROTOBUF_C_ext_5fblaster_2eproto__INCLUDED
#define PROTOBUF_C_ext_5fblaster_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct ExtBlaster__WifiBlastResult ExtBlaster__WifiBlastResult;
typedef struct ExtBlaster__WifiBlastResult__HealthMetrics ExtBlaster__WifiBlastResult__HealthMetrics;
typedef struct ExtBlaster__WifiBlastResult__HealthMetrics__LoadAvg ExtBlaster__WifiBlastResult__HealthMetrics__LoadAvg;
typedef struct ExtBlaster__WifiBlastResult__RadioMetrics ExtBlaster__WifiBlastResult__RadioMetrics;
typedef struct ExtBlaster__WifiBlastResult__DeviceMetrics ExtBlaster__WifiBlastResult__DeviceMetrics;
typedef struct ExtBlaster__WifiBlastResult__Status ExtBlaster__WifiBlastResult__Status;


/* --- enums --- */

typedef enum _ExtBlaster__RadioBandType {
  EXT_BLASTER__RADIO_BAND_TYPE__BAND_UNKNOWN = 0,
  EXT_BLASTER__RADIO_BAND_TYPE__BAND2G = 1,
  EXT_BLASTER__RADIO_BAND_TYPE__BAND5G = 2,
  EXT_BLASTER__RADIO_BAND_TYPE__BAND5GL = 3,
  EXT_BLASTER__RADIO_BAND_TYPE__BAND5GU = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXT_BLASTER__RADIO_BAND_TYPE)
} ExtBlaster__RadioBandType;
typedef enum _ExtBlaster__WiFiStandard {
  EXT_BLASTER__WI_FI_STANDARD__WIFI_STD_UNKNOWN = 0,
  EXT_BLASTER__WI_FI_STANDARD__WIFI_STD_80211_A = 1,
  EXT_BLASTER__WI_FI_STANDARD__WIFI_STD_80211_B = 2,
  EXT_BLASTER__WI_FI_STANDARD__WIFI_STD_80211_G = 3,
  EXT_BLASTER__WI_FI_STANDARD__WIFI_STD_80211_N = 4,
  EXT_BLASTER__WI_FI_STANDARD__WIFI_STD_80211_AC = 5,
  EXT_BLASTER__WI_FI_STANDARD__WIFI_STD_80211_AX = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXT_BLASTER__WI_FI_STANDARD)
} ExtBlaster__WiFiStandard;
typedef enum _ExtBlaster__ChanWidth {
  EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_UNKNOWN = 0,
  EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_20MHZ = 1,
  EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_40MHZ = 2,
  EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_40MHZ_ABOVE = 3,
  EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_40MHZ_BELOW = 4,
  EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_80MHZ = 5,
  EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_160MHZ = 6,
  EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_80_PLUS_80MHZ = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXT_BLASTER__CHAN_WIDTH)
} ExtBlaster__ChanWidth;
typedef enum _ExtBlaster__ResultCode {
  EXT_BLASTER__RESULT_CODE__RESULT_CODE_UNDEFINED = 0,
  EXT_BLASTER__RESULT_CODE__RESULT_CODE_SUCCEED = 1,
  EXT_BLASTER__RESULT_CODE__RESULT_CODE_ERROR = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXT_BLASTER__RESULT_CODE)
} ExtBlaster__ResultCode;

/* --- messages --- */

struct  ExtBlaster__WifiBlastResult__HealthMetrics__LoadAvg
{
  ProtobufCMessage base;
  protobuf_c_boolean has_one;
  double one;
  protobuf_c_boolean has_five;
  double five;
  protobuf_c_boolean has_fifteen;
  double fifteen;
};
#define EXT_BLASTER__WIFI_BLAST_RESULT__HEALTH_METRICS__LOAD_AVG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ext_blaster__wifi_blast_result__health_metrics__load_avg__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  ExtBlaster__WifiBlastResult__HealthMetrics
{
  ProtobufCMessage base;
  protobuf_c_boolean has_cpu_util;
  uint32_t cpu_util;
  protobuf_c_boolean has_mem_util;
  uint32_t mem_util;
  ExtBlaster__WifiBlastResult__HealthMetrics__LoadAvg *load_avg;
};
#define EXT_BLASTER__WIFI_BLAST_RESULT__HEALTH_METRICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ext_blaster__wifi_blast_result__health_metrics__descriptor) \
    , 0, 0, 0, 0, NULL }


struct  ExtBlaster__WifiBlastResult__RadioMetrics
{
  ProtobufCMessage base;
  protobuf_c_boolean has_noise_floor;
  int32_t noise_floor;
  protobuf_c_boolean has_channel_utilization;
  uint32_t channel_utilization;
  protobuf_c_boolean has_activity_factor;
  uint32_t activity_factor;
  protobuf_c_boolean has_carriersense_threshold_exceeded;
  uint32_t carriersense_threshold_exceeded;
  protobuf_c_boolean has_channel;
  uint32_t channel;
  protobuf_c_boolean has_wifi_standard;
  ExtBlaster__WiFiStandard wifi_standard;
  protobuf_c_boolean has_chan_width;
  ExtBlaster__ChanWidth chan_width;
  protobuf_c_boolean has_radio_band;
  ExtBlaster__RadioBandType radio_band;
};
#define EXT_BLASTER__WIFI_BLAST_RESULT__RADIO_METRICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ext_blaster__wifi_blast_result__radio_metrics__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, EXT_BLASTER__WI_FI_STANDARD__WIFI_STD_UNKNOWN, 0, EXT_BLASTER__CHAN_WIDTH__CHAN_WIDTH_UNKNOWN, 0, EXT_BLASTER__RADIO_BAND_TYPE__BAND_UNKNOWN }


struct  ExtBlaster__WifiBlastResult__DeviceMetrics
{
  ProtobufCMessage base;
  char *client_mac;
  protobuf_c_boolean has_rssi;
  int32_t rssi;
  protobuf_c_boolean has_tx_phyrate;
  uint32_t tx_phyrate;
  protobuf_c_boolean has_rx_phyrate;
  uint32_t rx_phyrate;
  protobuf_c_boolean has_snr;
  int32_t snr;
  size_t n_throughput_samples;
  double *throughput_samples;
  size_t n_tx_packet_retransmissions;
  uint64_t *tx_packet_retransmissions;
};
#define EXT_BLASTER__WIFI_BLAST_RESULT__DEVICE_METRICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ext_blaster__wifi_blast_result__device_metrics__descriptor) \
    , NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0,NULL }


struct  ExtBlaster__WifiBlastResult__Status
{
  ProtobufCMessage base;
  ExtBlaster__ResultCode code;
  char *description;
};
#define EXT_BLASTER__WIFI_BLAST_RESULT__STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ext_blaster__wifi_blast_result__status__descriptor) \
    , EXT_BLASTER__RESULT_CODE__RESULT_CODE_UNDEFINED, NULL }


struct  ExtBlaster__WifiBlastResult
{
  ProtobufCMessage base;
  protobuf_c_boolean has_time_stamp;
  uint64_t time_stamp;
  char *plan_id;
  protobuf_c_boolean has_step_id;
  uint32_t step_id;
  ExtBlaster__WifiBlastResult__HealthMetrics *health_metrics;
  ExtBlaster__WifiBlastResult__RadioMetrics *radio_metrics;
  ExtBlaster__WifiBlastResult__DeviceMetrics *device_metrics;
  ExtBlaster__WifiBlastResult__Status *status;
};
#define EXT_BLASTER__WIFI_BLAST_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ext_blaster__wifi_blast_result__descriptor) \
    , 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL }


/* ExtBlaster__WifiBlastResult__HealthMetrics__LoadAvg methods */
void   ext_blaster__wifi_blast_result__health_metrics__load_avg__init
                     (ExtBlaster__WifiBlastResult__HealthMetrics__LoadAvg         *message);
/* ExtBlaster__WifiBlastResult__HealthMetrics methods */
void   ext_blaster__wifi_blast_result__health_metrics__init
                     (ExtBlaster__WifiBlastResult__HealthMetrics         *message);
/* ExtBlaster__WifiBlastResult__RadioMetrics methods */
void   ext_blaster__wifi_blast_result__radio_metrics__init
                     (ExtBlaster__WifiBlastResult__RadioMetrics         *message);
/* ExtBlaster__WifiBlastResult__DeviceMetrics methods */
void   ext_blaster__wifi_blast_result__device_metrics__init
                     (ExtBlaster__WifiBlastResult__DeviceMetrics         *message);
/* ExtBlaster__WifiBlastResult__Status methods */
void   ext_blaster__wifi_blast_result__status__init
                     (ExtBlaster__WifiBlastResult__Status         *message);
/* ExtBlaster__WifiBlastResult methods */
void   ext_blaster__wifi_blast_result__init
                     (ExtBlaster__WifiBlastResult         *message);
size_t ext_blaster__wifi_blast_result__get_packed_size
                     (const ExtBlaster__WifiBlastResult   *message);
size_t ext_blaster__wifi_blast_result__pack
                     (const ExtBlaster__WifiBlastResult   *message,
                      uint8_t             *out);
size_t ext_blaster__wifi_blast_result__pack_to_buffer
                     (const ExtBlaster__WifiBlastResult   *message,
                      ProtobufCBuffer     *buffer);
ExtBlaster__WifiBlastResult *
       ext_blaster__wifi_blast_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ext_blaster__wifi_blast_result__free_unpacked
                     (ExtBlaster__WifiBlastResult *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ExtBlaster__WifiBlastResult__HealthMetrics__LoadAvg_Closure)
                 (const ExtBlaster__WifiBlastResult__HealthMetrics__LoadAvg *message,
                  void *closure_data);
typedef void (*ExtBlaster__WifiBlastResult__HealthMetrics_Closure)
                 (const ExtBlaster__WifiBlastResult__HealthMetrics *message,
                  void *closure_data);
typedef void (*ExtBlaster__WifiBlastResult__RadioMetrics_Closure)
                 (const ExtBlaster__WifiBlastResult__RadioMetrics *message,
                  void *closure_data);
typedef void (*ExtBlaster__WifiBlastResult__DeviceMetrics_Closure)
                 (const ExtBlaster__WifiBlastResult__DeviceMetrics *message,
                  void *closure_data);
typedef void (*ExtBlaster__WifiBlastResult__Status_Closure)
                 (const ExtBlaster__WifiBlastResult__Status *message,
                  void *closure_data);
typedef void (*ExtBlaster__WifiBlastResult_Closure)
                 (const ExtBlaster__WifiBlastResult *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    ext_blaster__radio_band_type__descriptor;
extern const ProtobufCEnumDescriptor    ext_blaster__wi_fi_standard__descriptor;
extern const ProtobufCEnumDescriptor    ext_blaster__chan_width__descriptor;
extern const ProtobufCEnumDescriptor    ext_blaster__result_code__descriptor;
extern const ProtobufCMessageDescriptor ext_blaster__wifi_blast_result__descriptor;
extern const ProtobufCMessageDescriptor ext_blaster__wifi_blast_result__health_metrics__descriptor;
extern const ProtobufCMessageDescriptor ext_blaster__wifi_blast_result__health_metrics__load_avg__descriptor;
extern const ProtobufCMessageDescriptor ext_blaster__wifi_blast_result__radio_metrics__descriptor;
extern const ProtobufCMessageDescriptor ext_blaster__wifi_blast_result__device_metrics__descriptor;
extern const ProtobufCMessageDescriptor ext_blaster__wifi_blast_result__status__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ext_5fblaster_2eproto__INCLUDED */
